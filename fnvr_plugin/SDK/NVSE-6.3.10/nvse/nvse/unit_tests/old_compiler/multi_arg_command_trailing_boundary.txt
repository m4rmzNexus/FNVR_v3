Begin Function {}

print "Started running xNVSE Multi-arg command trailing comparison operator tests."

    let array_var testArr := Ar_List 2

    ; Prior state parse: if eval Ar_Find 1 (testArr != ar_BadNumericIndex)
    ; New state parse: if (eval Ar_Find 1 testArr) != ar_BadNumericIndex
    Assert Ar_Find 2 testArr != ar_BadNumericIndex

    ; Prior state parse: if eval Ar_Find 1 (testArr == ar_BadNumericIndex)
    ; New state parse: if (eval Ar_Find 1 testArr) == ar_BadNumericIndex
    Assert Ar_Find 1 testArr == ar_BadNumericIndex

    ; Prior state parse: if eval Ar_Find 4 (testArr == ar_BadNumericIndex)
    ; New state parse: if (eval Ar_Find 4 testArr) == ar_BadNumericIndex
    Assert Ar_Find 4 testArr || (1 == 1)

    ; Lambda test
    let ref rTestLambda := (Begin Function {int a1, string_var a2}
        SetFunctionValue 1
    End)

    ; Prior state parse: if Call rTestLambda 1 ("test" == 1)
    ; New state parse: If (Call rTestLambda 1 "test") == 1
    Assert Call rTestLambda 1 "test" == 1

print "Finished running xNVSE Multi-arg command trailing comparison operator tests."

End